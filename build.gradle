buildscript {
    ext.kotlin_version = '1.3.50'
    ext.serialization_version = '0.4'
}

plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "application"
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id 'nu.studer.jooq' version '3.0.3'
    id "org.flywaydb.flyway" version "6.1.0"
}

group 'BUGS-NYU'
mainClassName = 'MainKt'
sourceCompatibility = 1.8

def getenv = { env_val, default_val ->
  ext.val = System.getenv(env_val)
  if (ext.val == null) {
    return default_val
  } else return ext.val
}

def dbUsername = getenv("DB_USERNAME", "schedge")
def dbPassword = getenv("DB_PASSWORD", "docker")
def dbUrl = getenv("JDBC_URL", "jdbc:postgresql://localhost:5432/schedge")
def dbDriver = 'org.postgresql.Driver'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation(
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8", // Standard library
            "org.apache.httpcomponents:httpclient:4.5.10", // Web requests framework
            "org.jsoup:jsoup:1.12.1", // HTML Parsing
            "com.github.ajalt:clikt:2.2.0", // Command line args
            "com.zaxxer:HikariCP:3.4.1", // Database connection pool
            "org.postgresql:postgresql:42.2.8.jre7", // Database driver
            "org.jetbrains.exposed:exposed:0.17.3", // Database framework
            "io.javalin:javalin:3.5.0", // Web server framework
            "io.github.microutils:kotlin-logging:1.7.6", // Logging
            "org.slf4j:slf4j-api:1.7.25", // Logging
            "ch.qos.logback:logback-core:1.2.3", // Logging
            "ch.qos.logback:logback-classic:1.2.3", // Logging
            "com.fasterxml.jackson.core:jackson-core:2.4.1", // JSON
            "com.fasterxml.jackson.core:jackson-annotations:2.4.1", // JSON
            "com.fasterxml.jackson.core:jackson-databind:2.4.1", // JSON
            "io.github.cdimascio:java-dotenv:5.1.3", // Environment
            "org.jooq:jooq", // Database framework
            "org.jooq:jooq-meta", // Database framework
            "org.jooq:jooq-codegen", // Database framework
            "javax.annotation:javax.annotation-api:1.2-b01", // Annotations
            // "org.jooq:jool:0.9.14", // Database framework
    )

    jooqRuntime 'postgresql:postgresql:9.1-901.jdbc4'

    testImplementation(
            "io.kotlintest:kotlintest-runner-junit5:3.3.2"
    )

    // standalone "org.junit.platform:junit-platform-console-standalone:1.5.2"
}

flyway {
  driver = dbDriver
  url = dbUrl
  user = dbUsername
  password = dbPassword
  locations = ['filesystem:migrations']
}

jooq {
  version = '3.11.9'
  edition = 'OSS'

  database(sourceSets.main) {
    jdbc {
      driver = dbDriver
      url = dbUrl
      user = dbUsername
      password = dbPassword
    }
    generator {
      database {
        name = 'org.jooq.meta.postgres.PostgresDatabase'
        includes = '.*'
        excludes = ''
        inputSchema = 'public'
      }

      generate {
        relations = true
        deprecated = false
        records = true
        immutablePojos = true
        fluentSetters = true
      }

      target {
        packageName = 'database.generated'
        directory = 'src/main/java'
      }
    }
  }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

