{"version":3,"sources":["constants.ts","FreshmenForm.tsx","SectionLink.tsx","HomePage.tsx","SchedulePage.tsx","LoadingScreen.tsx","SophomoresForm.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["API_URL","reducer","state","action","type","department","error","initialState","undefined","withStyles","FreshmanForm","display","flexDirection","padding","form","height","menuItem","margin","fontSize","select","maxWidth","button","addSchedule","classes","useReducer","dispatch","Paper","className","onSubmit","e","preventDefault","axios","get","then","res","console","log","data","navigate","catch","err","toString","Typography","variant","component","Select","value","onChange","event","target","MenuItem","FormLabel","Button","color","SectionLink","width","backgroundColor","verticalAlign","transform","boxShadow","position","transitionProperty","transitionDuration","content","zIndex","top","left","right","bottom","background","props","direction","transformOrigin","transitionTimingFunction","text","marginLeft","textDecoration","to","children","HomePage","theme","useTheme","Grid","item","xs","container","justify","spacing","name","url","palette","primary","main","secondary","map","key","SchedulePage","schedule","currentDate","startDayHour","endDayHour","useStyles","makeStyles","createStyles","progress","LoadingScreen","iteration","useState","percent","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","alignItems","style","minHeight","CircularProgress","courses","isLoading","checked","checkboxes","add","id","delete","recommendedCourses","Set","SophomoresForm","muiClasses","a","i","f","post","Array","from","course","Checkbox","has","createMuiTheme","blue","red","dayOffsets","Mon","Tues","Wed","Thurs","Fri","totalMinutesToDateTime","totalMinutes","dayOffset","Date","scheduleResponse","flatMap","startTime","endTime","days","courseName","professor","location","title","startDate","endDate","App","header","headerText","MuiThemeProvider","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.133d248a.chunk.js","sourcesContent":["export const API_URL = \"http://localhost:8000\";","import React, { useReducer } from \"react\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { navigate, RouteComponentProps } from \"@reach/router\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles, { WithStyles } from \"react-jss\";\nimport { API_URL } from \"./constants\";\nimport axios from \"axios\";\nimport { APIMeeting } from \"./types\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nconst styles = {\n  FreshmanForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"40px\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\"\n  },\n  menuItem: {\n    margin: \"20px\",\n    fontSize: \"1.1em\"\n  },\n  select: {\n    maxWidth: \"200px\",\n    fontSize: \"1.1em\",\n    margin: \"20px\"\n  },\n  button: {\n    margin: \"20px\",\n    maxWidth: \"200px\"\n  }\n};\n\ninterface State {\n  department: string;\n  error: string | undefined;\n}\n\ntype ActionTypes =\n  | { type: \"SELECT_DEPARTMENT\"; department: string }\n  | { type: \"SUBMIT_FORM_FAILED\"; error: string };\n\nfunction reducer(state: State, action: ActionTypes) {\n  switch (action.type) {\n    case \"SELECT_DEPARTMENT\":\n      return { ...state, department: action.department };\n    case \"SUBMIT_FORM_FAILED\":\n      return { ...state, error: action.error };\n    default:\n      return state;\n  }\n}\n\nconst initialState = {\n  department: \"\",\n  error: undefined\n};\n\ninterface Props extends RouteComponentProps, WithStyles<typeof styles> {\n  addSchedule: (s: Array<APIMeeting>) => void;\n}\n\nconst FreshmenForm: React.FC<Props> = ({ addSchedule, classes }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Paper className={classes.FreshmanForm}>\n      <form\n        className={classes.form}\n        onSubmit={e => {\n          e.preventDefault();\n          if (state.department === \"\") {\n            dispatch({\n              type: \"SUBMIT_FORM_FAILED\",\n              error: \"You must select a department\"\n            });\n          }\n          axios\n            .get(`${API_URL}/schedule-by-departments/${state.department}`)\n            .then(res => {\n              console.log(res);\n              addSchedule(res.data);\n              navigate(`/loading`);\n            })\n            .catch(err => {\n              console.log(err);\n              dispatch({ type: \"SUBMIT_FORM_FAILED\", error: err.toString() });\n            });\n        }}\n      >\n        <Typography variant=\"h3\" component=\"h3\">\n          Select A Major\n        </Typography>\n        <Select\n          className={classes.select}\n          value={state.department}\n          onChange={event =>\n            dispatch({\n              type: \"SELECT_DEPARTMENT\",\n              department: event.target.value as string\n            })\n          }\n        >\n          <MenuItem className={classes.menuItem} value=\"\">\n            {\" \"}\n            Choose a subject{\" \"}\n          </MenuItem>\n          <MenuItem className={classes.menuItem} value=\"CSCI-UA\">\n            {\" \"}\n            Computer Science\n          </MenuItem>\n          <MenuItem className={classes.menuItem} value=\"MATH-UA\">\n            {\" \"}\n            Math{\" \"}\n          </MenuItem>\n          <MenuItem className={classes.menuItem} value=\"CRWRI-UA\">\n            {\" \"}\n            Creative Writing{\" \"}\n          </MenuItem>\n        </Select>\n        {state.error && (\n          <FormLabel error>Couldn't load data, try again</FormLabel>\n        )}\n        {state.department && (\n          <div className={classes.button}>\n            <Button type=\"submit\" color=\"primary\">\n              {\" \"}\n              Create Schedule\n            </Button>\n          </div>\n        )}\n      </form>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(FreshmenForm);\n","import React, { ReactNode } from \"react\";\nimport withStyles, { WithStyles } from \"react-jss\";\nimport { Link } from \"@reach/router\";\nconst styles = {\n  SectionLink: {\n    width: \"300px\",\n    height: \"300px\",\n    fontSize: \"32px\",\n    color: \"black\",\n    backgroundColor: \"#eaeaea\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    \"-webkit-transform\": \"perspective(1px) translateZ(0)\",\n    transform: \"perspective(1px) translateZ(0)\",\n    boxShadow: \"0 0 1px rgba(0, 0, 0, 0)\",\n    position: \"relative\",\n    \"-webkit-transition-property\": \"color\",\n    transitionProperty: \"color\",\n    \"-webkit-transition-duration\": \"0.3s\",\n    transitionDuration: \"0.3s\",\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      zIndex: -1,\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: (props: Props) => props.color,\n      \"-webkit-transform\": \"scaleX(0)\",\n      transform: \"scaleX(0)\",\n      \"-webkit-transform-origin\": (props: Props) =>\n        `${props.direction === \"left\" ? \"0\" : \"100%\"} 50%`,\n      transformOrigin: (props: Props) =>\n        `${props.direction === \"left\" ? \"0\" : \"100%\"} 50%`,\n      \"-webkit-transition-property\": \"transform\",\n      transitionProperty: \"transform\",\n      \"-webkit-transition-duration\": \"0.4s\",\n      transitionDuration: \"0.4s\",\n      \"-webkit-transition-timing-function\": \"ease-out\",\n      transitionTimingFunction: \"ease-out\"\n    },\n    \"&:hover, &:focus, &:active\": {\n      color: \"white\"\n    },\n    \"&:hover:before, &:focus:before, &:active:before\": {\n      \"-webkit-transform\": \"scaleX(1)\",\n      transform: \"scaleX(1)\"\n    }\n  },\n  text: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginLeft: \"-40px\",\n    textDecoration: \"none\"\n  }\n};\n\ninterface Props extends WithStyles<typeof styles> {\n  to: string;\n  children: ReactNode;\n  color: string;\n  direction: string;\n}\nconst SectionLink: React.FC<Props> = ({ classes, to, children }) => {\n  return (\n    <Link to={to}>\n      <div className={classes.SectionLink}>\n        <div className={classes.text}> {children}</div>\n      </div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(SectionLink);\n","import React from \"react\";\nimport { Grid, useTheme } from \"@material-ui/core\";\nimport SectionLink from \"./SectionLink\";\nimport { RouteComponentProps } from \"@reach/router\";\n\nconst HomePage: React.FC<RouteComponentProps> = () => {\n  const theme = useTheme();\n  return (\n    <Grid item xs={12}>\n      <Grid container justify=\"center\" spacing={5}>\n        {[\n          {\n            name: \"Freshmen\",\n            url: \"/freshmen\",\n            direction: \"left\",\n            color: theme.palette.primary.main\n          },\n          {\n            name: \"Sophomores\",\n            url: \"/sophomores\",\n            direction: \"right\",\n            color: theme.palette.secondary.main\n          }\n        ].map(({ name, url, direction, color }) => (\n          <Grid key={name} item>\n            <SectionLink direction={direction} color={color} to={url}>\n              {name}\n            </SectionLink>\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { ViewState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  WeekView,\n  Appointments\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { Meeting } from \"./types\";\nimport withStyles, { WithStyles } from \"react-jss\";\n\nconst styles = {\n  SchedulePage: {\n    //height: \"10vh\"\n  }\n};\n\ninterface Props extends RouteComponentProps, WithStyles<typeof styles> {\n  schedule: Array<Meeting>;\n}\n\nconst SchedulePage: React.FC<Props> = ({ classes, schedule }) => {\n  return (\n    <Paper className={classes.SchedulePage}>\n      <Scheduler height={650} data={schedule}>\n        <ViewState currentDate=\"2019-09-09\" />\n        <WeekView startDayHour={8} endDayHour={18} />\n        <Appointments />\n      </Scheduler>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(SchedulePage);\n","import React, { useEffect, useState } from \"react\";\nimport { createStyles, Paper, Theme } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { navigate, RouteComponentProps } from \"@reach/router\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    progress: {\n      margin: theme.spacing(2)\n    }\n  })\n);\n\ninterface Progress {\n  percent: number;\n  iteration: number;\n}\n\nconst getLoadingMessage = (iteration: number) => {\n  if (iteration === 0) {\n    return \"Finding you a Writing The Essay course\";\n  } else if (iteration === 1) {\n    return \"Searching out a Core course\";\n  }\n  return \"Getting a major course just for you\";\n};\n\nconst LoadingScreen: React.FC<RouteComponentProps> = () => {\n  const classes = useStyles();\n  const [progress, setProgress] = useState({ percent: 0, iteration: 0 });\n  useEffect(() => {\n    function tick() {\n      if (progress.iteration === 3) {\n        navigate(`/schedule`);\n      }\n      setProgress(oldProgress =>\n        oldProgress.percent >= 100\n          ? { percent: 0, iteration: oldProgress.iteration + 1.5 }\n          : {\n              percent: oldProgress.percent + 1,\n              iteration: oldProgress.iteration\n            }\n      );\n    }\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  });\n  return (\n    <Paper>\n      <Grid\n        container\n        spacing={10}\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ minHeight: \"100vh\", padding: \"100px\" }}\n      >\n        <Typography variant=\"h4\" component=\"h4\">\n          {\" \"}\n          {getLoadingMessage(progress.iteration)}\n        </Typography>\n        <CircularProgress\n          className={classes.progress}\n          variant=\"determinate\"\n          value={progress.percent}\n        />\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default LoadingScreen;\n","import React, { Reducer, useEffect, useReducer } from \"react\";\nimport {\n  Checkbox,\n  createStyles,\n  Paper,\n  Theme,\n  Typography\n} from \"@material-ui/core\";\nimport { navigate, RouteComponentProps } from \"@reach/router\";\nimport withStyles, { WithStyles } from \"react-jss\";\nimport { API_URL } from \"./constants\";\nimport axios from \"axios\";\nimport { APICourse } from \"./types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = {\n  SophomoresForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"40px\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  menuItem: {\n    margin: \"20px\",\n    fontSize: \"1.1em\"\n  },\n  select: {\n    maxWidth: \"200px\",\n    fontSize: \"1.1em\",\n    margin: \"20px\"\n  },\n  button: {\n    margin: \"20px\",\n    maxWidth: \"200px\"\n  }\n};\n\ninterface State {\n  courses: Array<APICourse> | undefined;\n  isLoading: boolean;\n  error: string | undefined;\n  checkboxes: Set<number>;\n  recommendedCourses: Array<APICourse> | undefined;\n}\n\ntype ActionTypes =\n  | { type: \"SELECT_DEPARTMENT\"; department: string }\n  | { type: \"SUBMIT_FORM_FAILED\"; error: string }\n  | { type: \"ADD_COURSES\"; courses: APICourse[] }\n  | { type: \"UPDATE_CHECKBOXES\"; checked: boolean; id: number }\n  | { type: \"SUBMIT_FORM_SUCCEEDED\"; recommendedCourses: APICourse[] };\n\nfunction reducer(state: State, action: ActionTypes): State {\n  switch (action.type) {\n    case \"ADD_COURSES\":\n      return { ...state, courses: action.courses, isLoading: false };\n    case \"UPDATE_CHECKBOXES\":\n      if (action.checked) {\n        state.checkboxes.add(action.id);\n      } else {\n        state.checkboxes.delete(action.id);\n      }\n      return { ...state, checkboxes: state.checkboxes };\n    case \"SUBMIT_FORM_FAILED\":\n      return { ...state, error: action.error };\n    case \"SUBMIT_FORM_SUCCEEDED\":\n      return { ...state, recommendedCourses: action.recommendedCourses };\n    default:\n      return state;\n  }\n}\n\nconst initialState = {\n  isLoading: true,\n  courses: undefined,\n  error: undefined,\n  checkboxes: new Set() as Set<number>,\n  recommendedCourses: undefined\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    progress: {\n      margin: theme.spacing(2)\n    }\n  })\n);\n\ninterface Props extends RouteComponentProps, WithStyles<typeof styles> {}\n\nconst SophomoresForm: React.FC<Props> = ({ classes }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const muiClasses = useStyles();\n  useEffect(() => {\n    async function f() {\n      for (let i = 0; i < 3; i++) {\n        let res;\n        try {\n          res = await axios.get(`${API_URL}/courses`);\n          dispatch({ type: \"ADD_COURSES\", courses: res.data });\n          break;\n        } catch {}\n      }\n    }\n    f();\n  }, []);\n  console.log(state);\n  if (state.isLoading) {\n    return (\n      <Paper>\n        <Grid\n          container\n          spacing={10}\n          direction=\"column\"\n          alignItems=\"center\"\n          style={{ minHeight: \"100vh\", padding: \"100px\" }}\n        >\n          <Typography variant=\"h4\" component=\"h4\">\n            Fetching courses...\n          </Typography>\n          <CircularProgress className={muiClasses.progress} />\n        </Grid>\n      </Paper>\n    );\n  }\n  return (\n    <Paper className={classes.SophomoresForm}>\n      <form\n        className={classes.form}\n        onSubmit={e => {\n          e.preventDefault();\n          axios\n            .post(\n              `${API_URL}/available-by-completed`,\n              Array.from(state.checkboxes)\n            )\n            .then(res => {\n              dispatch({\n                type: \"SUBMIT_FORM_SUCCEEDED\",\n                recommendedCourses: res.data\n              });\n            })\n            .catch(err => console.log(err));\n        }}\n      >\n        <Typography variant=\"h3\" component=\"h3\">\n          Pick the courses you've taken already\n        </Typography>\n        {state.courses &&\n          state.courses.map(course => (\n            <Typography>\n              <Checkbox\n                value={state.checkboxes.has(course.id)}\n                onChange={event =>\n                  dispatch({\n                    type: \"UPDATE_CHECKBOXES\",\n                    checked: event.target.checked,\n                    id: course.id\n                  })\n                }\n              />\n              {course.name}\n            </Typography>\n          ))}\n        <div className={classes.button}>\n          <Button type=\"submit\" color=\"primary\">\n            {\" \"}\n            Create Schedule\n          </Button>\n        </div>\n        {state.recommendedCourses && (\n          <Typography>\n            {\" \"}\n            We can recommend the following courses:\n            <ul>\n              {state.recommendedCourses.map(course => (\n                <li> {course.name} </li>\n              ))}\n            </ul>\n          </Typography>\n        )}\n      </form>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(SophomoresForm);\n","import React, { Dispatch, useReducer } from \"react\";\nimport withStyles, { WithStyles } from \"react-jss\";\nimport { blue, red } from \"@material-ui/core/colors\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport FreshmenForm from \"./FreshmenForm\";\nimport HomePage from \"./HomePage\";\nimport { Link, Router } from \"@reach/router\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SchedulePage from \"./SchedulePage\";\nimport { APIMeeting, Meeting } from \"./types\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport SophomoresForm from \"./SophomoresForm\";\n\nconst styles = {\n  App: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  header: {\n    display: \"flex\",\n    padding: \"20px\",\n    alignItems: \"center\",\n    height: \"100px\",\n    fontSize: \"1.1em\"\n  },\n  headerText: {\n    textDecoration: \"none\",\n    color: \"black\",\n    \"&:visited\": {\n      textDecoration: \"none\"\n    }\n  }\n};\n\nconst theme = createMuiTheme({\n  palette: { type: \"light\", primary: blue, secondary: red }\n});\n\ninterface State {\n  schedule: Array<Meeting> | undefined;\n}\n\ntype ActionTypes = { type: \"ADD_SCHEDULE\"; schedule: Array<Meeting> };\n\nfunction reducer(state: State, action: ActionTypes) {\n  switch (action.type) {\n    case \"ADD_SCHEDULE\":\n      return { ...state, schedule: action.schedule };\n    default:\n      return state;\n  }\n}\n\nconst initialState = {\n  schedule: undefined\n};\n\nconst dayOffsets = {\n  Mon: 0,\n  Tues: 1,\n  Wed: 2,\n  Thurs: 3,\n  Fri: 4\n};\n\nconst totalMinutesToDateTime = (totalMinutes: number, dayOffset: number) => {\n  const hours = totalMinutes / 60;\n  const minutes = totalMinutes % 60;\n  return new Date(2019, 8, 9 + dayOffset, hours, minutes);\n};\n\nconst addSchedule = (dispatch: Dispatch<ActionTypes>) => (\n  scheduleResponse: Array<APIMeeting>\n) => {\n  const schedule = scheduleResponse.flatMap(\n    ({ startTime, endTime, days, courseName, professor, location }) => {\n      if (days[0] === days[1]) {\n        return [\n          {\n            title: courseName,\n            startDate: totalMinutesToDateTime(startTime, dayOffsets[days[0]]),\n            endDate: totalMinutesToDateTime(endTime, dayOffsets[days[0]]),\n            professor,\n            location\n          }\n        ];\n      }\n      return [\n        {\n          title: courseName,\n          startDate: totalMinutesToDateTime(startTime, dayOffsets[days[0]]),\n          endDate: totalMinutesToDateTime(endTime, dayOffsets[days[0]]),\n          professor,\n          location\n        },\n        {\n          title: courseName,\n          startDate: totalMinutesToDateTime(startTime, dayOffsets[days[1]]),\n          endDate: totalMinutesToDateTime(endTime, dayOffsets[days[1]]),\n          professor,\n          location\n        }\n      ];\n    }\n  );\n  dispatch({ type: \"ADD_SCHEDULE\", schedule });\n};\n\nconst App: React.FC<WithStyles<typeof styles>> = ({ classes }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.App}>\n        <div className={classes.header}>\n          <Link to=\"/\">\n            <Typography\n              className={classes.headerText}\n              variant=\"h1\"\n              component=\"h1\"\n            >\n              Schedge\n            </Typography>\n          </Link>\n        </div>\n        <Router>\n          <HomePage path=\"/\" />\n          <LoadingScreen path=\"/loading\" />\n          {state.schedule ? (\n            <SchedulePage schedule={state.schedule} path=\"/schedule\" />\n          ) : (\n            <HomePage path=\"/schedule\" />\n          )}\n          <FreshmenForm addSchedule={addSchedule(dispatch)} path=\"/freshmen\" />\n          <SophomoresForm path=\"/sophomores\" />\n        </Router>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}